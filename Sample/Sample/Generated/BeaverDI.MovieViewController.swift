/// This file is generated by BeaverDI
/// DO NOT EDIT!

import BeaverDI

// MARK: - MovieViewController

final class MovieViewControllerDependencyContainer: DependencyContainer {

    
    init(parent: DependencyContainer) {
        super.init(parent)
    }

    override func registerDependencies(in store: DependencyStore) {
        
    }
}

protocol MovieViewControllerDependencyResolver {
    
    
    var movieManager: MovieManaging { get }
    
}

extension MovieViewControllerDependencyContainer: MovieViewControllerDependencyResolver {
    
    var movieManager: MovieManaging {
        return resolve(MovieManaging.self, name: "movieManager")
    }
}

extension MovieViewController {

    static func makeMovieViewController(injecting parentDependencies: DependencyContainer) -> MovieViewController {
        let dependencies = MovieViewControllerDependencyContainer(parent: parentDependencies)
        return MovieViewController(injecting: dependencies)
    }
}

protocol MovieViewControllerDependencyInjectable {
    init(injecting dependencies: MovieViewControllerDependencyResolver)
}

extension MovieViewController: MovieViewControllerDependencyInjectable {}
