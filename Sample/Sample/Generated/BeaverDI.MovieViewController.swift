/// This file is generated by BeaverDI
/// DO NOT EDIT!
import BeaverDI
// MARK: - MovieViewController
final class MovieViewControllerDependencyContainer: DependencyContainer {
    let movieID: UInt
    init(parent: DependencyContainer, movieID: UInt) {
        self.movieID = movieID
        super.init(parent)
    }
    override func registerDependencies(in store: DependencyStore) {
    }
}
protocol MovieViewControllerDependencyResolver {
    var movieID: UInt { get }
    var movieManager: MovieManaging { get }
}
extension MovieViewControllerDependencyContainer: MovieViewControllerDependencyResolver {
    var movieManager: MovieManaging {
        return resolve(MovieManaging.self, name: "movieManager")
    }
}
extension MovieViewController {
    static func makeMovieViewController(injecting parentDependencies: DependencyContainer, movieID: UInt) -> MovieViewController {
        let dependencies = MovieViewControllerDependencyContainer(parent: parentDependencies, movieID: movieID)
        return MovieViewController(injecting: dependencies)
    }
}
protocol MovieViewControllerDependencyInjectable {
    init(injecting dependencies: MovieViewControllerDependencyResolver)
}
extension MovieViewController: MovieViewControllerDependencyInjectable {}