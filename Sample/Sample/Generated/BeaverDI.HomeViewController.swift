/// This file is generated by BeaverDI
/// DO NOT EDIT!

import BeaverDI

// MARK: - HomeViewController

final class HomeViewControllerDependencyContainer: DependencyContainer {

    init(_ parent: DependencyContainer) {
        super.init(parent)
    }

    override func registerDependencies(in store: DependencyStore) {
        
    }
}

protocol HomeViewControllerDependencyResolver {
    
    var movieManager: MovieManaging { get }
    
}

extension HomeViewControllerDependencyContainer: HomeViewControllerDependencyResolver {
    
    var movieManager: MovieManaging {
        return resolve(MovieManaging.self)
    }
}

extension HomeViewController {

    static func makeHomeViewController(injecting parentDependencies: DependencyContainer) -> HomeViewController {
        let dependencies = HomeViewControllerDependencyContainer(parentDependencies)
        return HomeViewController(injecting: dependencies)
    }
}

protocol HomeViewControllerDependencyInjectable {
    init(injecting dependencies: HomeViewControllerDependencyResolver)
}

extension HomeViewController: HomeViewControllerDependencyInjectable {}
