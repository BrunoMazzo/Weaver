/// This file is generated by BeaverDI
/// DO NOT EDIT!

import BeaverDI

// MARK: - ViewControllerBis

final class ViewControllerBisDependencyContainer: DependencyContainer {

    init(_ parent: DependencyContainer) {
        super.init(parent)
    }

    override func registerDependencies(in store: DependencyStore) {
        
    }
}

protocol ViewControllerBisDependencyResolver {
    
    var appDelegate: AppDelegate { get }
}

extension ViewControllerBisDependencyContainer: ViewControllerBisDependencyResolver {
    
    var appDelegate: AppDelegate {
        return resolve(AppDelegate.self)
    }
}

extension ViewControllerBis {

    static func makeViewControllerBis(injecting parentDependencies: DependencyContainer) -> ViewControllerBis {
        let dependencies = ViewControllerBisDependencyContainer(parentDependencies)
        return ViewControllerBis(injecting: dependencies)
    }
}
