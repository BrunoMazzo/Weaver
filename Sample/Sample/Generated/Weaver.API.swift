/// This file is generated by Weaver
/// DO NOT EDIT!
import Weaver
// MARK: - MovieAPI
final class MovieAPIDependencyContainer: DependencyContainer {
    init(parent: DependencyContainer) {
        super.init(parent)
    }
    override func registerDependencies(in store: DependencyStore) {
    }
}
protocol MovieAPIDependencyResolver {
    var urlSession: URLSession { get }
}
extension MovieAPIDependencyContainer: MovieAPIDependencyResolver {
    var urlSession: URLSession {
        return resolve(URLSession.self, name: "urlSession")
    }
}
extension MovieAPI {
    static func makeMovieAPI(injecting parentDependencies: DependencyContainer) -> MovieAPI {
        let dependencies = MovieAPIDependencyContainer(parent: parentDependencies)
        return MovieAPI(injecting: dependencies)
    }
}
protocol MovieAPIDependencyInjectable {
    init(injecting dependencies: MovieAPIDependencyResolver)
}
extension MovieAPI: MovieAPIDependencyInjectable {}