//
//  GeneratorTests.swift
//  BeaverDICodeGenTests
//
//  Created by Th√©ophane Rupin on 3/4/18.
//

import Foundation
import XCTest

@testable import BeaverDICodeGen

final class GeneratorTests: XCTestCase {
    
    func testGeneratorShouldGenerateAValidSwiftCode() {
        
        do {
            let input = DataInputMock()
            let data = ResolverData(targetTypeName: "Test",
                                    parentTypeName: "ParentTest",
                                    dependencies: [DependencyData(name: "api", implementationTypeName: "API", protocolName: "APIProtocol", scope: "graph")])

            let generator = Generator(template: "dependency_resolver")
            try generator.generate(in: input, resolver: data)
            
            XCTAssertEqual(input.string!, """
/// This file is generated by BeaverDI
/// TO NOT EDIT!

// MARK: - Resolver

final class TestDependencyResolver: DependencyResolver {
  init(_ parent: ParentTest) {
    super.init(parent)
  }

  override func registerDependencies(in store: DependencyStore) {
    store.register(APIProtocol.self, scope: .graph, builder: { dependencies in
      return API(dependencies)
    })
  }
}

// MARK: - Helpers

extension Test {
  var api: APIProtocol {
    return dependencies.resolver([BeaverDICodeGen.DependencyData(name: "api", implementationTypeName: "API", protocolName: "APIProtocol", scope: "graph")])
  }
}
""")
            
        } catch {
            XCTFail("Unexpected error \(error)")
        }
    }
}
